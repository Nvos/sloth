type Query {
    node(id: ID!): Node
}

type Mutation

directive @goModel(model: String, models: [String!]) on OBJECT
    | INPUT_OBJECT
    | SCALAR
    | ENUM
    | INTERFACE
    | UNION

# @goModel(model: "ent.Noder")
interface Node  {
    id: ID!
}

interface Error {
    message: String!
}

type NotFound implements Error {
    message: String!
}

type ValidationError implements Error {
    message: String!
}

type DateTimeRange {
    startedAt: Time!
    endedAt: Time!
}

scalar Time